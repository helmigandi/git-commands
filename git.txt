# Version Control
- Tempat untuk menyimpan file (File Storage / Database)
- Tempat untuk menyimpan history perubahan
--  Tempat untuk menyimpan semua versi dari file sehingga bisa melihat
    kembali ke versi sebelumnya
- Yang dia urus file (text/office doc)
- khusus Teks File dia dapat compare perubahan
-- kalau bisa dibikin file text (bentuk markdown) terlebih dahulu lalu di compile di akhir
- Kolaborasi dengan banyak orang

#Pembagian
##Centralize (Subversion)
-Ada server satu, lalu semua orang mengakses ke server tersebut
-jadi kalau kita menyimpan perubahan, langsung menyimpan ke database server
-kalau kita mau mengambil perubahan terbaru, langsung ambil dari database server
##Distributed (Git)
-Setiap orang punya database sendiri-sendiri
-Jika mau menyimpan perubahan, tidak perlu ke database server,
bisa simpan ke local dulu baru syncronise ke database server

#Hosting
-Github
-Bitbucket
-Gitlab
-dan lain-lain

#Memulai Git

-config
--untuk memulai git menambahkan nama dan email
--git config --global user.email "sugandihelmi@gmail.com"
--git config --global user.name "Helmi"

-git init
--untuk membuat repository baru di local
--contoh: git init belajar-git

-git status
--untuk melihat status sudah di track / monitor atau belum oleh git

-git add
--untuk mentrack / monitor ke git
--contoh: 1. untuk semua file   ->      git add .
--        2. untuk per file     ->      git add nama_file

-git commit
--untuk menyimpan file
--contoh git commit -m "pesan / keterangan commit"

-git diff
--untuk melihat perbedaan

-git log
--melihat perubahan history
--contoh: git log --oneline

-git diff
--melihat perbedaan antar versi
--contoh: git dif commitId_sebelum..commitId_sesudah

-staging area
--tempat persiapan dari working folder ke repository
--setelah di add dan sebelum di commit
--contoh kasus: saat mengerjakan suatu program untuk membuat fitur baru kemudian dapat info bahwa ada bug pada program yang kita kerjakan di program yang sama. lalu kita edit program tersebut untuk memperbaiki bug. dengan hal ini kita memiliki dua perubahan yaitu bug fix dan fitur baru yang belum jadi. sementara kita mau yang disimpan bug fix saja. jadi kita commit baris tertentu saja.
---git reset
---untuk perubahan di stagging
---git add -p
---untuk add ke staging secara perbaris atau potongan.
---pilih s, untuk split
---pilih baris yang ingin dimasukan ke staging lalu dicommit.
---git diff --staged
---melihat apa saja yang di stagging
---git diff
---melihat apa saja yang tidak masuk staging

-git reset --hard
--membatalkan perubahan di staging dan working(Bahaya!!!)

-gitignore
--tidak mengikutsertakan file yang tidak diinginkan(hasil compile)

-remote repository (github)
--buat repository baru pada github
--terdapat dua protokol https/ssh
--bedanya protokol yang dipakai dan authentikasinya.
--kalau ssh pakai username password dan public key(tidak usah masukin password) kalau https akan ditanya password.
--copy url yang ada di github dan daftarkan di repo lokal
-- lalu ketik:
--git remote add nama_alias url_github
--git remote -v
--untuk menegecek (push -> dupload, fetch -> download)
--git push -u git-belajar master
--push repository lokal (-u untuk menset default remote yaitu github, hal ini dilakukan pada saat push pertama)


--mendapatkan yang sudah ada diserver di download ke lokal
